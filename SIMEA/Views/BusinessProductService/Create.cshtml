@model SIMEA.Models.BusinessProductServiceView

@{
    ViewData["Title"] = "Create Business Product/Service";
    Layout = "~/Views/Shared/_LayoutAcc.cshtml";
}

<div class="form-horizontal">
    <div class="container-fluid">
        <h1 class="mt-4">Create Business Product/Service</h1>
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item"><a href="/Home/Index">Dashboard</a></li>
            <li class="breadcrumb-item"><a href="/BusinessProductService/Index">Business Products/Services</a></li>
            <li class="breadcrumb-item active">Create</li>
        </ol>

        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-plus-circle mr-1"></i>
                Add New Product/Service
            </div>
            <div class="card-body">
                <form asp-action="Create" asp-controller="BusinessProductService" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label asp-for="ProductServiceName" class="control-label">Product/Service Name</label>
                            <input asp-for="ProductServiceName" class="form-control" required />
                            <span asp-validation-for="ProductServiceName" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-6">
                            <label asp-for="RevenueModel" class="control-label">Revenue Model</label>
                            <input asp-for="RevenueModel" class="form-control" required />
                            <span asp-validation-for="RevenueModel" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Description" class="control-label">Description</label>
                        <textarea asp-for="Description" class="form-control" rows="3" required></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="TargetMarketCustomer" class="control-label">Target Market/Customer</label>
                        <input asp-for="TargetMarketCustomer" class="form-control" required />
                        <span asp-validation-for="TargetMarketCustomer" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="ValueProposition" class="control-label">Value Proposition</label>
                        <textarea asp-for="ValueProposition" class="form-control" rows="3" required></textarea>
                        <span asp-validation-for="ValueProposition" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label>Key Features</label>
                        <div class="input-group">
                            <input type="text" id="featureInput" class="form-control" placeholder="Add feature">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" id="addFeature" type="button">
                                    <i class="fas fa-plus"></i> Add
                                </button>
                            </div>
                        </div>
                        <div class="mt-2" id="featuresList">
                            <span class="badge badge-secondary mr-1 mb-1 no-features">No features added</span>
                        </div>
                        <div id="featuresContainer">
                            <!-- Hidden inputs will be created here dynamically -->
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Dependencies</label>
                        <div class="input-group">
                            <input type="text" id="dependencyInput" class="form-control" placeholder="Add dependency">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" id="addDependency" type="button">
                                    <i class="fas fa-plus"></i> Add
                                </button>
                            </div>
                        </div>
                        <div class="mt-2" id="dependenciesList">
                            <span class="badge badge-secondary mr-1 mb-1 no-dependencies">No dependencies added</span>
                        </div>
                        <div id="dependenciesContainer">
                            <!-- Hidden inputs will be created here dynamically -->
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Competitors</label>
                        <div class="input-group">
                            <input type="text" id="competitorInput" class="form-control" placeholder="Add competitor">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" id="addCompetitor" type="button">
                                    <i class="fas fa-plus"></i> Add
                                </button>
                            </div>
                        </div>
                        <div class="mt-2" id="competitorsList">
                            <span class="badge badge-secondary mr-1 mb-1 no-competitors">No competitors added</span>
                        </div>
                        <div id="competitorsContainer">
                            <!-- Hidden inputs will be created here dynamically -->
                        </div>
                    </div>

                    <hr />
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary"><i class="fas fa-save"></i> Save Product/Service</button>
                        <a asp-action="Index" asp-controller="BusinessProductService" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            // Handle adding features
            $("#addFeature").click(function() {
                const value = $("#featureInput").val().trim();
                
                if (value) {
                    addFeature(value);
                    $("#featureInput").val("");
                }
            });
            
            // Handle adding dependencies
            $("#addDependency").click(function() {
                const value = $("#dependencyInput").val().trim();
                
                if (value) {
                    addDependency(value);
                    $("#dependencyInput").val("");
                }
            });
            
            // Handle adding competitors
            $("#addCompetitor").click(function() {
                const value = $("#competitorInput").val().trim();
                
                if (value) {
                    addCompetitor(value);
                    $("#competitorInput").val("");
                }
            });
            
            // Enter key handling
            $("#featureInput").keypress(function(e) {
                if (e.which === 13) {
                    e.preventDefault();
                    $("#addFeature").click();
                }
            });
            
            $("#dependencyInput").keypress(function(e) {
                if (e.which === 13) {
                    e.preventDefault();
                    $("#addDependency").click();
                }
            });
            
            $("#competitorInput").keypress(function(e) {
                if (e.which === 13) {
                    e.preventDefault();
                    $("#addCompetitor").click();
                }
            });
            
            // Function to add a feature
            function addFeature(value) {
                // Remove "no features" badge if it exists
                $("#featuresList .no-features").remove();
                
                // Check if this feature already exists
                if ($(`#featuresContainer input[value="${value}"]`).length === 0) {
                    // Add the hidden input
                    $("#featuresContainer").append(`<input type="hidden" name="KeyFeatures" value="${value}">`);
                    
                    // Add the badge to the display
                    $("#featuresList").append(`
                        <span class="badge badge-success mr-1 mb-1 feature-badge" data-value="${value}">
                            ${value} <i class="fas fa-times ml-1 remove-badge" data-type="feature" data-value="${value}"></i>
                        </span>
                    `);
                }
            }
            
            // Function to add a dependency
            function addDependency(value) {
                // Remove "no dependencies" badge if it exists
                $("#dependenciesList .no-dependencies").remove();
                
                // Check if this dependency already exists
                if ($(`#dependenciesContainer input[value="${value}"]`).length === 0) {
                    // Add the hidden input
                    $("#dependenciesContainer").append(`<input type="hidden" name="Dependencies" value="${value}">`);
                    
                    // Add the badge to the display
                    $("#dependenciesList").append(`
                        <span class="badge badge-primary mr-1 mb-1 dependency-badge" data-value="${value}">
                            ${value} <i class="fas fa-times ml-1 remove-badge" data-type="dependency" data-value="${value}"></i>
                        </span>
                    `);
                }
            }
            
            // Function to add a competitor
            function addCompetitor(value) {
                // Remove "no competitors" badge if it exists
                $("#competitorsList .no-competitors").remove();
                
                // Check if this competitor already exists
                if ($(`#competitorsContainer input[value="${value}"]`).length === 0) {
                    // Add the hidden input
                    $("#competitorsContainer").append(`<input type="hidden" name="Competitors" value="${value}">`);
                    
                    // Add the badge to the display
                    $("#competitorsList").append(`
                        <span class="badge badge-warning mr-1 mb-1 competitor-badge" data-value="${value}">
                            ${value} <i class="fas fa-times ml-1 remove-badge" data-type="competitor" data-value="${value}"></i>
                        </span>
                    `);
                }
            }
            
            // Function to remove a feature
            function removeFeature(value) {
                // Remove the hidden input
                $(`#featuresContainer input[value="${value}"]`).remove();
                
                // Remove the badge
                $(`#featuresList .feature-badge[data-value="${value}"]`).remove();
                
                // Add "no features" badge if there are no more features
                if ($("#featuresContainer input").length === 0) {
                    $("#featuresList").html('<span class="badge badge-secondary mr-1 mb-1 no-features">No features added</span>');
                }
            }
            
            // Function to remove a dependency
            function removeDependency(value) {
                // Remove the hidden input
                $(`#dependenciesContainer input[value="${value}"]`).remove();
                
                // Remove the badge
                $(`#dependenciesList .dependency-badge[data-value="${value}"]`).remove();
                
                // Add "no dependencies" badge if there are no more dependencies
                if ($("#dependenciesContainer input").length === 0) {
                    $("#dependenciesList").html('<span class="badge badge-secondary mr-1 mb-1 no-dependencies">No dependencies added</span>');
                }
            }
            
            // Function to remove a competitor
            function removeCompetitor(value) {
                // Remove the hidden input
                $(`#competitorsContainer input[value="${value}"]`).remove();
                
                // Remove the badge
                $(`#competitorsList .competitor-badge[data-value="${value}"]`).remove();
                
                // Add "no competitors" badge if there are no more competitors
                if ($("#competitorsContainer input").length === 0) {
                    $("#competitorsList").html('<span class="badge badge-secondary mr-1 mb-1 no-competitors">No competitors added</span>');
                }
            }
            
            // Remove badges when clicking the X
            $(document).on("click", ".remove-badge", function() {
                const type = $(this).data("type");
                const value = $(this).data("value");
                
                if (type === "feature") {
                    removeFeature(value);
                } else if (type === "dependency") {
                    removeDependency(value);
                } else if (type === "competitor") {
                    removeCompetitor(value);
                }
            });
        });
    </script>
}