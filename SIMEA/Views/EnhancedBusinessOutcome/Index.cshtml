@model IEnumerable<SIMEA.Models.EnhancedBusinessOutcomeModel>

@{
    ViewData["Title"] = "Enhanced Business Outcomes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h3 class="mb-0">
                        <i class="fas fa-bullseye me-2"></i>Enhanced Business Outcomes
                    </h3>
                    <a class="btn btn-light btn-sm" asp-action="Create">
                        <i class="fas fa-plus me-1"></i>Create New
                    </a>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="outcomeTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>Outcome Name</th>
                                    <th>Category</th>
                                    <th>Priority</th>
                                    <th>Status</th>
                                    <th class="text-center">Progress</th>
                                    <th>Expected Value</th>
                                    <th>Owner</th>
                                    <th>Review Date</th>
                                    <th class="text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            <strong>@Html.DisplayFor(modelItem => item.OutcomeName)</strong>
                                            <br>
                                            <small class="text-muted">@Html.DisplayFor(modelItem => item.OutcomeType)</small>
                                        </td>
                                        <td>
                                            <span class="badge bg-info">@Html.DisplayFor(modelItem => item.OutcomeCategory)</span>
                                        </td>
                                        <td>
                                            @{
                                                var priorityClass = item.BusinessPriority switch
                                                {
                                                    "Critical" => "badge bg-danger",
                                                    "High" => "badge bg-warning",
                                                    "Medium" => "badge bg-primary",
                                                    "Low" => "badge bg-secondary",
                                                    _ => "badge bg-light text-dark"
                                                };
                                            }
                                            <span class="@priorityClass">@Html.DisplayFor(modelItem => item.BusinessPriority)</span>
                                        </td>
                                        <td>
                                            @{
                                                var statusClass = item.CurrentStatus switch
                                                {
                                                    "Achieved" => "badge bg-success",
                                                    "In Progress" => "badge bg-primary",
                                                    "At Risk" => "badge bg-warning",
                                                    "Delayed" => "badge bg-danger",
                                                    "Planned" => "badge bg-secondary",
                                                    _ => "badge bg-light text-dark"
                                                };
                                            }
                                            <span class="@statusClass">@Html.DisplayFor(modelItem => item.CurrentStatus)</span>
                                        </td>
                                        <td class="text-center">
                                            <div class="progress" style="height: 20px;">
                                                <div class="progress-bar @(item.ProgressPercentage >= 75 ? "bg-success" : item.ProgressPercentage >= 50 ? "bg-info" : item.ProgressPercentage >= 25 ? "bg-warning" : "bg-danger")" 
                                                     role="progressbar" 
                                                     style="width: @(item.ProgressPercentage)%" 
                                                     aria-valuenow="@item.ProgressPercentage" 
                                                     aria-valuemin="0" 
                                                     aria-valuemax="100">
                                                    @item.ProgressPercentage.ToString("F0")%
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <strong class="text-success">@item.ExpectedValue.ToString("C")</strong>
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.Owner)</td>
                                        <td>
                                            @if (item.ReviewDate.HasValue)
                                            {
                                                @item.ReviewDate.Value.ToString("MMM dd, yyyy")
                                            }
                                            else
                                            {
                                                <span class="text-muted">Not set</span>
                                            }
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group" role="group">
                                                <a class="btn btn-sm btn-outline-primary" asp-action="Details" asp-route-id="@item.Id" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a class="btn btn-sm btn-outline-secondary" asp-action="Edit" asp-route-id="@item.Id" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <a class="btn btn-sm btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id" title="Delete">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#outcomeTable').DataTable({
                "pageLength": 25,
                "order": [[ 2, "desc" ], [ 4, "desc" ]],
                "columnDefs": [
                    { "orderable": false, "targets": 8 }
                ],
                "language": {
                    "search": "Filter outcomes:",
                    "lengthMenu": "Show _MENU_ outcomes per page",
                    "info": "Showing _START_ to _END_ of _TOTAL_ outcomes",
                    "infoEmpty": "No outcomes available",
                    "infoFiltered": "(filtered from _MAX_ total outcomes)"
                }
            });
        });
    </script>
} 